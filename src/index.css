/* ./src/index.css */
@tailwind base;
@tailwind components;
@tailwind utilities;
@import url('https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;700&display=swap');

body {
    font-size: var(--font-size);
    font-family: var(--font-family);
    font-weight: var(--weight-thin);
    background-color: lightcyan;
}

.page-wrapper {
    background-size: 430px;
    /* preventing child top margin from shifting parent object  */
    overflow: auto;  
}

#root {
    display: flex;
    flex-direction: column;

    min-height: 500px;
}

.header button {
    width: 30px;
}

.header button::after {
    content: "";
    display: block;
    padding-top: 100%;
}

input {
    position: relative;
}

input::after {
    position: absolute;

}

input:focus {
    outline: none;
}

.icon {
    @apply bg-center bg-no-repeat;
    width: 15px;
    background-size: 100%;
}


.icon::after{
    content: "";
    display: block;
    padding-top: 100%;
}


/* .icon-wrapper {
    max-height: 25px;
} */




/* 
gradient border pseudo element
*/
/* 

this is not ok, we need to change border depending on our state 
pseudo elements cant be readed or changed through js
.check * {
    position: relative;
    z-index: 10;
}
.check {
    @apply rounded-full m-4 p-2;
    
    box-sizing: border-box;
    position: relative;
    background-clip: padding-box; !important
    border: solid var(--check-border) transparent; !important 
}

.check::before{
    content: '';
    position: absolute;
    top: 0; right: 0; bottom: 0; left: 0;
    z-index: -1;
    margin: var(--check-border-neg); 
    border-radius: inherit;
    /* color of border 
    background: var(--d-dark-grayish-blue);
} */


/* 
gradient border wrapper 
*/
.check {
    @apply rounded-full p-px flex justify-center items-center m-4;
    position: relative;
    padding: 1px;
}

.check>button{
    @apply rounded-full p-2;
}